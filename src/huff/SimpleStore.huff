/* Interface */
#define function setValue(uint256) nonpayable returns ()
#define function getValue() view returns (uint256)

/* Storage Slots */
#define constant VALUE_LOCATION = FREE_STORAGE_POINTER()

// "INVALID_VALUE"
#define constant INVALID_VALUE = 0x494e56414c49445f56414c554500000000000000000000000000000000000000
#define constant INVALID_VALUE_LENGTH = 0x13
/* Methods */
#define macro SET_VALUE() = takes (0) returns (0) {
    0x04 calldataload   // [value]
    [VALUE_LOCATION]    // [ptr, value]
    sstore              // []
}

// #define macro VELUE_CHECK(error) = takes(0) returns(0) {
//     [INVALID_VALUE]
//     [INVALID_VALUE_LENGTH]
//     0x04 calldataload 
//     [VALUE_LOCATION] // [ptr, value, 13(length),"INVALID_VALUE"]
//     callvalue         // [value_from,value,13(length),"INVALID_VALUE"]
// }
#define macro GET_VALUE() = takes (0) returns (0) {
    // Load value from storage.
    [VALUE_LOCATION]   // [ptr]
    sload                // [value]

    // Store value in memory.
    0x00 mstore

    // Return value
    0x20 0x00 return
}

#define macro MAIN() = takes (0) returns (0) {
    // Identify which function is being called.
    0x00 calldataload 0xE0 shr
    dup1 __FUNC_SIG(setValue) eq set jumpi
    dup1 __FUNC_SIG(getValue) eq get jumpi

    0x00 0x00 revert

    set:
        SET_VALUE()
    get:
        GET_VALUE()

}