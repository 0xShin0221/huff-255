#define function addTwo(uint256,uint256) view returns(uint256)

#define macro MAIN() = takes(0) returns(0) {

    // Get the function selector
    0x00
    calldataload
    0xE0
    shr

    // Jump to the implementation of the ADD_TWO function if the calldata matches the function selector
    __FUNC_SIG(addTwo) eq addTwo jumpi

    addTwo:
        ADD_TWO()
}

#define macro ADD_TWO() = takes(0) returns(0) {
    0x04 calldataload     // load first 32 bytes onto the stack - number 1
    0x24 calldataload     // load second 32 bytes onto the stack - number 2
    add                   // add number 1 and 2 and put the result onto the stack

    0x00 mstore           // place the result in memory
    0x20 0x00 return      // return the result
}   

// 60208060093d393df360003560e01c630f52d66e14610010575b6004356024350160005260206000f3

// [00]	PUSH1	20
// [02]	DUP1	
// [03]	PUSH1	09
// [05]	RETURNDATASIZE	
// [06]	CODECOPY	
// [07]	RETURNDATASIZE	
// [08]	RETURN	
// [09]	PUSH1	00
// [0b]	CALLDATALOAD	
// [0c]	PUSH1	e0
// [0e]	SHR	
// [0f]	PUSH4	0f52d66e
// [14]	EQ	
// [15]	PUSH2	0010
// [18]	JUMPI	
// [19]	JUMPDEST	
// [1a]	PUSH1	04
// [1c]	CALLDATALOAD	
// [1d]	PUSH1	24
// [1f]	CALLDATALOAD	
// [20]	ADD	
// [21]	PUSH1	00
// [23]	MSTORE	
// [24]	PUSH1	20
// [26]	PUSH1	00
// [28]	RETURN